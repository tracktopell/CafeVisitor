/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tracktopell.cafevisitor.view;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.BufferedImage;
import javax.imageio.ImageIO;

/**
 *
 * @author Softtek
 */
public class PhotoPanel extends javax.swing.JPanel {

	BufferedImage webcamImage;
	BufferedImage personIconImage;
	boolean mostrarIamgen=true;

	public void setWebcamImage(BufferedImage i) {
		this.webcamImage = i;
		repaint();
	}

	/**
	 * Creates new form PhotoPanel
	 */
	public PhotoPanel() {
		//initComponents();
		try {
			personIconImage = ImageIO.read(PhotoPanel.class.getResourceAsStream("/images/person-icon.png"));			
		} catch (Exception e) {
		}
	}

	public void setMostrarIamgen(boolean mostrarIamgen) {
		this.mostrarIamgen = mostrarIamgen;
		repaint();
	}
	
	

	@Override
	public void paint(Graphics g) {
		super.paint(g);
		System.err.println("->PhotoPanel.paint:");
	}

	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);		
		if(mostrarIamgen){
			System.err.println("->PhotoPanel.paintComponent: webcamImage="+webcamImage);
			BufferedImage imageToPaint = null;
		
			if (webcamImage != null) {
				System.err.println("->PhotoPanel.paintComponent: OK  ! the webcamImage="+webcamImage);
				imageToPaint = webcamImage;

				int imgW = imageToPaint.getWidth();
				int imgH = imageToPaint.getHeight();
				double rImg = (double) getWidth() / (double) imgW;

				int imgY = 0;

				Graphics2D g2d = (Graphics2D) g;
				AffineTransform atB = g2d.getTransform();

				AffineTransform at = new AffineTransform();

				at.scale(rImg, rImg);

				g2d.setTransform(at);

				imgY = (int) (((getHeight() / 2.0) / rImg) - (imgH / 2.0));

				g2d.drawImage(imageToPaint,
						0,
						imgY,
						null);
				g2d.setTransform(atB);

			} else if(personIconImage != null){
				//g.setColor(getBackground());
				//g.clearRect(0, 0, getWidth(), getHeight());

				imageToPaint = personIconImage;

				int imgW = imageToPaint.getWidth();
				int imgH = imageToPaint.getHeight();
				double rImg = (double) getWidth() / (double) imgW;

				int imgY = 0;

				Graphics2D g2d = (Graphics2D) g;
				AffineTransform atB = g2d.getTransform();

				AffineTransform at = new AffineTransform();

				at.scale(rImg, rImg);

				g2d.setTransform(at);

				imgY = (int) (((getHeight() / 2.0) / rImg) - (imgH / 2.0));

				g2d.drawImage(imageToPaint,
						0,
						imgY,
						null);
				g2d.setTransform(atB);

			} else {
				g.setColor(getBackground());
				g.clearRect(0, 0, getWidth(), getHeight());

				g.setColor(Color.RED);
				g.drawString("IMAGEN NO ENCONTRADA", 10, getHeight() / 2);
			}
		}
	}

	@Override
	public void paintAll(Graphics g) {
		super.paintAll(g);
		//System.err.println("->PhotoPanel.paintAll:");		
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new java.awt.Dimension(240, 320));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 320, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
